# ###
# This example shows how to deploy multiple Orka VMs in a Pipeline.
# In this scenario, the VMs will be run in parallel and run two different jobs.
#
# The orka-init and orka-teardown Tasks require a Kubernetes service account with
# permission to create / delete secrets and config maps. See the README for more
# information.
# ###
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: parallel-deploy
spec:
  workspaces:
    - name: shared-data
  tasks:
    - name: setup
      taskRef:
        name: orka-init
      params:
        - name: base-image
          value: 90GBigSurSSH.img
    - name: diskinfo
      runAfter:
        - setup
      retries: 1
      taskRef:
        name: orka-deploy
      params:
        - name: copy-build
          value: "false"
        - name: script
          value: |
            diskutil info /
      workspaces:
        - name: orka
          workspace: shared-data
    - name: ruby
      runAfter:
        - setup
      retries: 1
      taskRef:
        name: orka-deploy
      params:
        - name: copy-build
          value: "false"
        - name: script
          value: |
            #!/usr/bin/env ruby
            puts "Hello macOS"
      workspaces:
        - name: orka
          workspace: shared-data
  finally:
    - name: cleanup
      taskRef:
        name: orka-teardown
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: run-parallel-deploy
spec:
  serviceAccountName: orka-svc
  pipelineRef:
    name: parallel-deploy
  workspaces:
    - name: shared-data
      emptyDir: {}
